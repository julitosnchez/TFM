<?xml version="1.0"?>
<launch>    
    <!-- Launches the nodes -->
   
  <!-- WORLD TO CAMERA 
  <node pkg="tf" type="static_transform_publisher" name="world2camera" args="0.0 0.0 0.48 0.34841337  0.34813603 -0.61514481  0.61563486 /base_link /camera_link 200"/> -->
  <node pkg="tf" type="static_transform_publisher" name="world2camera" args="0.0 0.0 0.0 0.0 0.0 0.0 1.0 /base_link /camera_link 200"/>   

 	<!-- SET CAMERA FRAMES -->
<!-- 
    1) transform 2) timestamp 3) the name of the parent frame 4) the name of the child frame -->
<!-- sendTransform(tf::StampedTransform(transform_1, ros::Time::now(), "/camera_link", "/camera_rgb_frame")); -->
<!-- transform_1.setOrigin(tf::Vector3(0.0, -0.045, 0.0) );   q.setRPY(0, 0, 0);
   <node pkg="tf" type="static_transform_publisher" name="camera2frame" args="0.0 -0.045 0.0 0.0 0.0 0.0 1.0 /camera_link /camera_rgb_frame 100"/>
   <node pkg="tf" type="static_transform_publisher" name="frame2optical" args="0.0 0.0 0.0 -0.5 0.5 -0.5 0.5 /camera_rgb_frame /camera_rgb_optical_frame 100"/> 
-->
 
    <!--Convert a PCD file to ROS PointCloud msg-->
    <node pkg="pcl_euc_seg" type="pcd_reader_example" name="pcd_to_cloud" output="screen" args ="$(find pcl_euc_seg)/pcd/test_pcd_suelo.pcd 1"/>

    <!--Filtering and clustering points in the PointCloud -->
    <node pkg="pcl_euc_seg" type="euc_seg" name="euclidean_segmentation" output="screen"/> 

    <!-- RVIZ -->
	  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find pcl_euc_seg)/rviz/tutorial1.rviz" required="true" />

</launch>
